#ifndef FRAMEWINDLG_H
#define FRAMEWINDLG_H
/*********************************************************************
*                                                                    *
*                SEGGER Microcontroller GmbH & Co. KG                *
*        Solutions for real time microcontroller applications        *
*                                                                    *
**********************************************************************
*                                                                    *
* C-file generated by:                                               *
*                                                                    *
*        GUI_Builder for emWin version 5.32                          *
*        Compiled Oct  8 2015, 11:59:02                              *
*        (c) 2015 Segger Microcontroller GmbH & Co. KG               *
*                                                                    *
**********************************************************************
*                                                                    *
*        Internet: www.segger.com  Support: support@segger.com       *
*                                                                    *
**********************************************************************
*/

// USER START (Optionally insert additional includes)
// USER END

#include "DIALOG.h"

/*********************************************************************
*
*       Defines
*
**********************************************************************
*/
#define ID_FRAMEWIN_0        (GUI_ID_USER + 0x00)
#define ID_MULTIPAGE_0        (GUI_ID_USER + 0x01)
extern WM_HWIN CreatePage1(WM_HWIN hParent);//new
extern WM_HWIN CreatePage2(WM_HWIN hParent);//new
extern WM_HWIN CreatePage3(WM_HWIN hParent);//new
extern WM_HWIN CreatePage4(WM_HWIN hParent);//new

WM_HWIN CreateFramewin(void);

void MainTask(void) {
    CreateFramewin();       // �I�s GUIBuilder ���ͪ��D����

    while (1) {
        GUI_CURSOR_Show();
        GUI_Delay(10);        // �w����s GUI
    }
}

// USER START (Optionally insert additional defines)
// USER END

/*********************************************************************
*
*       Static data
*
**********************************************************************
*/

// USER START (Optionally insert additional static data)
// USER END

/*********************************************************************
*
*       _aDialogCreate
*/
static const GUI_WIDGET_CREATE_INFO _aDialogCreate[] = {
  { FRAMEWIN_CreateIndirect, "Framewin", ID_FRAMEWIN_0, 0, 0, 320, 240, 0, 0x64, 0 },
  { MULTIPAGE_CreateIndirect, "Multipage", ID_MULTIPAGE_0, 0, 0, 310, 218, 0, 0x0, 0 },
  // USER START (Optionally insert additional widgets)
  // USER END
};

/*********************************************************************
*
*       Static code
*
**********************************************************************
*/

// USER START (Optionally insert additional static code)
// USER END

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
  WM_HWIN hItem;
  int     NCode;
  int     Id;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
  case WM_INIT_DIALOG:
    //
    // Initialization of 'Framewin'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_MULTIPAGE_0);//new
    // hItem �O MULTIPAGE ����� handle
    WM_HWIN hPage1 = CreatePage1(hItem);  // �ǤJ MULTIPAGE ���� parent
    WM_HWIN hPage2 = CreatePage2(hItem);
    WM_HWIN hPage3 = CreatePage3(hItem);  // �ǤJ MULTIPAGE ���� parent
    WM_HWIN hPage4 = CreatePage4(hItem);
    // �[�J�����]�i���w��ܤ�r�^
    MULTIPAGE_AddPage(hItem, hPage1, "Page 1");
    MULTIPAGE_AddPage(hItem, hPage2, "Page 2");///////new
    MULTIPAGE_AddPage(hItem, hPage3, "Page 3");
    MULTIPAGE_AddPage(hItem, hPage4, "Page 4");///////new
    MULTIPAGE_SelectPage(hItem, 0);
  

    hItem = pMsg->hWin;
    FRAMEWIN_SetTextColor(hItem, GUI_WHITE);
    FRAMEWIN_SetText(hItem, "3D Printer UI");
    FRAMEWIN_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
    FRAMEWIN_SetClientColor(hItem, GUI_WHITE);   // �]�w�����Ȥ�ϭI����
    
    //FRAMEWIN_SetBarColor(hItem, 0, GUI_LIGHTBLUE); // �]�w���D�C�I����]0 ��D���D�C�^
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
  case WM_NOTIFY_PARENT:
    Id    = WM_GetId(pMsg->hWinSrc);
    NCode = pMsg->Data.v;
    switch(Id) {
    case ID_MULTIPAGE_0: // Notifications sent by 'Multipage'
      switch(NCode) {
      case WM_NOTIFICATION_CLICKED:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      case WM_NOTIFICATION_RELEASED:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      case WM_NOTIFICATION_MOVED_OUT:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      case WM_NOTIFICATION_VALUE_CHANGED:
        // USER START (Optionally insert code for reacting on notification message)
        // USER END
        break;
      // USER START (Optionally insert additional code for further notification handling)
      // USER END
      }
      break;
    // USER START (Optionally insert additional code for further Ids)
    // USER END
    }
    break;
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
    break;
  }
}

/*********************************************************************
*
*       Public code
*
**********************************************************************
*/
/*********************************************************************
*
*       CreateFramewin
*/

WM_HWIN CreateFramewin(void) {
  WM_HWIN hWin;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
  return hWin;
}

// USER START (Optionally insert additional public code)
// USER END
#endif FRAMEWINDLG_H
/*************************** End of file ****************************/
